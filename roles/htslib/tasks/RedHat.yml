---
- name: "Install htslib depended OS packages"
  yum:
    name: "{{ htslib_os_packages }}"
    state: latest
  become: yes

# Is it already installed?
- name: "Check for htslib installation @ {{ htslib_install_dest }}/{{ htslib_prefix }}"
  stat: path="{{ htslib_install_dest }}/{{ htslib_prefix }}"
  register: htslib_installed

# Transfer, unpack and compile
- name: "Transfer, unpack and compile htslib"
  block:
    - ansible.builtin.unarchive:
        src: "files/{{ htslib_prefix }}.{{ htslib_archive }}"
        dest: /tmp
        creates: /tmp/{{ htslib_prefix }}
    - command: "./configure --prefix={{ htslib_install_dest }}/{{ htslib_prefix }} {{ htslib_configure_flags | join(' ') }} {{ htslib_configure_flags_user | join(' ') }}"
      args:
        chdir: /tmp/{{ htslib_prefix }}
    - community.general.make:
        chdir: /tmp/{{ htslib_prefix }}
    - community.general.make:
        chdir: /tmp/{{ htslib_prefix }}
        target: install
      become: yes
  when: not htslib_installed.stat.exists

- name: "Link htslib parts (binaries, man and lib) to OS"
  block:
    - ansible.builtin.file:
        src: "{{ htslib_install_dest }}/{{ htslib_prefix }}"
        dest: "{{ htslib_linkdir }}"
        state: link

    # Find & link binaries      
    - ansible.builtin.find:
        paths: "{{ htslib_linkdir }}/bin"
      register: htslib_binaries
      when: htslib_dolink
    - ansible.builtin.file:
        src: "{{ item.path }}"
        path: "{{ htslib_binary_dest }}/{{ item.path | basename }}"
        state: link
      with_items: "{{ htslib_binaries.files }}"

    # Find & create man directories and link man files
    - ansible.builtin.find:
        paths: "{{ htslib_linkdir }}/share/man"
        file_type: directory
      register: htslib_man_dirs
    - ansible.builtin.file:
        path: "{{ htslib_man_dest }}/{{ item.path | basename }}"
        owner: root
        group: root
        mode: 0755
      with_items: "{{ htslib_man_dirs.files }}"

    - ansible.builtin.find:
        paths: "{{ htslib_linkdir }}/share/man"
        file_type: file
        recurse: true
      register: htslib_man_files
    - ansible.builtin.file:
        src: "{{ item.path }}"
        path: "{{ htslib_man_dest }}/{{ item.path.split('/')[-2:]|join('/') }}"
        state: link
      with_items: "{{ htslib_man_files.files }}"

    - command: mandb
      become: yes

    # Link library files: libs & pkgconfig
    - ansible.builtin.find:
        paths: "{{ htslib_linkdir }}/lib"
        file_type: file
      register: htslib_lib_files
    - ansible.builtin.find:
        paths: "{{ htslib_linkdir }}/lib"
        file_type: link
      register: htslib_lib_links
    - ansible.builtin.file:
        src: "{{ item.path }}"
        path: "{{ htslib_lib_dest }}/{{ item.path | basename }}"
        state: link
      with_items: "{{ htslib_lib_files.files }}"
    - ansible.builtin.file:
        src: "{{ item.path }}"
        path: "{{ htslib_lib_dest }}/{{ item.path | basename }}"
        state: link
      with_items: "{{ htslib_lib_links.files }}"

    - ansible.builtin.file:
        path: "{{ htslib_lib_dest }}/pkgconfig"
        owner: root
        group: root
        mode: 0755
    - ansible.builtin.find:
        paths: "{{ htslib_linkdir }}/lib/pkgconfig"
        file_type: file
      register: htslib_lib_pkgconfig
    - ansible.builtin.file:
        src: "{{ item.path }}"
        path: "{{ htslib_lib_dest }}/pkgconfig/{{ item.path | basename }}"
        state: link
      with_items: "{{ htslib_lib_pkgconfig.files }}"
  when: not htslib_installed.stat.exists and htslib_dolink
